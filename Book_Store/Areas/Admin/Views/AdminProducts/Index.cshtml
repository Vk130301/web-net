@using PagedList.Core.Mvc
@model PagedList.Core.IPagedList<Book_Store.Models.Product>

@{
    int CurrentPage = ViewBag.CurrentPage;
    ViewData["Title"] = "Danh sách sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<div class="page-header">
    <div class="header-sub-title">
        <nav class="breadcrumb breadcrumb-dash">
            <a asp-area="Admin" asp-controller="Home" asp-action="Index" class="breadcrumb-item"><i class="anticon anticon-home m-r-5"></i>Trang chủ</a>
            <a asp-area="Admin" asp-controller="AdminProducts" asp-action="Index" class="breadcrumb-item">Danh sách sản phẩm</a>
            <span class="breadcrumb-item active">Danh sách sản phẩm : trang @CurrentPage</span>
        </nav>
    </div>
</div>
<div class="card">
    <div class="card-body">
        <div class="row m-b-30">
            <div class="col-md-8">
                <div class="row">
                    <div class="col-md-4">
                        <div class="input-affix m-v-10">
                            <i class="prefix-icon anticon anticon-search opacity-04"></i>
                            <input id="keyword" name="keyword" type="text" class="form-control" placeholder="Tìm kiếm sản phẩm">
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="input-affix m-v-10">
                            <select class="custom-select" id="txtCateID" name="txtCateID" style="min-width: 200px;" asp-items="ViewBag.DanhMuc">
                                <option disabled selected>Chọn danh mục</option>
                                <option value="0">Chọn tất cả</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="input-affix m-v-10">
                            <select class="custom-select" id="txtAuthorID" name="txtAuthorID" style="min-width: 200px;" asp-items="ViewBag.TacGia">
                                <option disabled selected>Chọn tác giả</option>
                                <option value="0">Chọn tất cả</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4 text-right">
                <a class="btn btn-primary" asp-area="Admin" asp-controller="AdminProducts" asp-action="Create"><i class="anticon anticon-plus-circle m-r-5"></i><span>Thêm sản phẩm</span></a>
            </div>
        </div>
        <div class="table-responsive">
            <table class="table table-hover e-commerce-table">
                <thead>
                    <tr>
                        <th><input type="checkbox" id="selectAll"></th>
                        <th>ID</th>
                        <th>Tên sản phẩm</th>
                        <th>Tác Giả</th>
                        <th>Danh mục</th>
                        <th>Giá</th>
                        <th>Discount</th>
                        <th>Giá bán</th>
                        <th>Tồn kho</th>
                        <th>Trạng thái</th>
                        <th>
                            <button id="editSelected" class="btn btn-secondary btn-tone m-r-5" asp-area="Admin" asp-controller="AdminProducts" asp-action="EditAll">Edit Selected Products</button>
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody id="records_table">
                    @if (Model != null)
                    {
                                               
                        foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <input type="checkbox" name="selectedProducts" value="@item.ProductId" />
                                </td>
                                <td>
                                    @item.ProductId
                                </td>
                                <td>
                                       @item.ProductName
                                </td>
                                <td>@item.Author.AuthorName</td>
                                <td>@item.Cate.CateName</td>
                                <td>@item.Price.Value.ToString("#,##0") VNĐ</td>
                                <td>@item.Discount%</td>
                                <td>
                                    @{
                                        double price = item.Price.Value;
                                        double discount = item.Discount.Value; ;
                                        @if (item.Discount > 0)
                                        {
                                            double discountedPrice = price - (price * discount / 100);
                                            double roundedPrice = Math.Round(discountedPrice, 0, MidpointRounding.AwayFromZero);
                                            <div>@roundedPrice.ToString("#,##0") VNĐ</div>
                                        }else
                                        {
                                            <div>@item.Price.Value.ToString("#,##0") VNĐ</div>
                                        }
                                    }
                                </td>
                                <td>@item.UnitslnStock</td>
                                <td>
                                    @if (item.UnitslnStock.Value > 0)
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="badge badge-success badge-dot m-r-10"></div>
                                            <div>Còn hàng</div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="d-flex align-items-center">
                                            <div class="badge badge-danger badge-dot m-r-10"></div>
                                            <div>Hết hàng</div>
                                        </div>
                                    }
                                <td>
                                    <a class="btn btn-primary btn-tone m-r-5" asp-area="Admin" asp-controller="AdminProducts" asp-action="Details" asp-route-id="@item.ProductId">View</a>
                                    <a class="btn btn-secondary btn-tone m-r-5" asp-area="Admin" asp-controller="AdminProducts" asp-action="Edit" asp-route-id="@item.ProductId">Edit</a>
                                    <a class="btn btn-success btn-tone m-r-5" asp-area="Admin" asp-controller="AdminProducts" asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                                </td>
                               
                            </tr>

                        }
                    }


                </tbody>

            </table>
            <div aria-label="Page navigation example">
                <ul class="pagination">
                    <pager class="pager-container" list="@Model" asp-area="Admin" asp-controller="AdminProducts" asp-route-CateID="@ViewBag.CurrentCateID" asp-route-AuthorID="@ViewBag.CurrentAuthorID" asp-action="Index" />
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            function GetUrlParameter(sParam) {
                var sPageURL = window.location.search.substring(1);
                var sURLVariables = sPageURL.split('&')
                for (var i = 0; i < sURLVariables.length; i++) {
                    var sParameterName = sURLVariables[i].split('=');
                    if (sParameterName[0] == sParam) {
                        return sParameterName[1];
                    }
                }
            }
            jQuery("#txtCateID").change(function () {
                var cateID = jQuery(this).children(":selected").attr("value");
                cateID = parseFloat(cateID);
                $('#txtCateID option')
                    .removeAttr('selected');
                $("#txtCateID > [value=" + cateID + "]").attr("selected", "true");

                var authorID = $('#txtAuthorID option:selected').attr("id");
                if (authorID === undefined) authorID = GetUrlParameter("authorID")

                $.ajax({
                    url: '/Admin/AdminProducts/Filter',
                    datatype: "json",
                    type: "GET",
                    data: {
                        AuthorID: authorID,
                        CateID: cateID
                    },
                    async: true,
                    success: function (results) {
                        if (results.status == "success") {
                            window.location.href = results.redirectUrl;
                        }
                    },
                    error: function (xhr) {
                        alert('error');
                    }
                });
            });

            jQuery("#txtAuthorID").change(function () {
                var authorID = jQuery(this).children(":selected").attr("value");
                authorID = parseFloat(authorID);
                $('#txtAuthorID option')
                    .removeAttr('selected');
                $("#txtAuthorID > [value=" + authorID + "]").attr("selected", "true");

                var cateID = $('#txtCateID option:selected').attr("id");
                if (cateID === undefined) cateID = GetUrlParameter("cateID")

                $.ajax({
                    url: '/Admin/AdminProducts/Filter',
                    datatype: "json",
                    type: "GET",
                    data: {
                        AuthorID: authorID,
                        CateID: cateID
                    },
                    async: true,
                    success: function (results) {
                        if (results.status == "success") {
                            window.location.href = results.redirectUrl;
                        }
                    },
                    error: function (xhr) {
                        alert('error');
                    }
                });
            });

            $("#keyword").keyup(function () {
                var strkeyword = $('#keyword').val();
                console.log(strkeyword);
                $.ajax({
                    url: '/Admin/Search/FindProduct/',
                    datatype: "json",
                    type: "POST",
                    data: { keyword: strkeyword },
                    async: true,
                    success: function (results) {
                        $("#records_table").html("");
                        $("#records_table").html(results);
                    },
                    error: function (xhr) {
                        alert('error');
                    }
                });
            });
        });

        const selectAllCheckbox = document.getElementById('selectAll');
        const checkboxes = document.getElementsByName('selectedProducts');

        selectAllCheckbox.addEventListener('click', function () {
            checkboxes.forEach((checkbox) => {
                checkbox.checked = selectAllCheckbox.checked;
            });
        });

        checkboxes.forEach((checkbox) => {
            checkbox.addEventListener('click', function () {
                // If the clicked checkbox is not the select all checkbox
                if (this !== selectAllCheckbox) {
                    // If the checkbox is unchecked, uncheck the select all checkbox
                    if (!this.checked) {
                        selectAllCheckbox.checked = false;
                    } else {
                        // If all the other checkboxes are checked, check the select all checkbox
                        const allChecked = [...checkboxes].every(c => c.checked);
                        if (allChecked) {
                            selectAllCheckbox.checked = true;
                        }
                    }
                }
            })
        });

        $('body').on('click', '#editSelected', function (e) {
            e.preventDefault();
            var selectedProducts = [];
            var checkboxes = $(this).closest('table').find('input[name="selectedProducts"]:checked');
            checkboxes.each(function () {
                var productId = $(this).val();
                selectedProducts.push(productId);
            });

            if (selectedProducts.length > 0) {
                var discount = parseFloat(prompt("Nhập giảm giá mới cho các sản phẩm đã chọn:"));
                if (!isNaN(discount)) {
                    $.ajax({
                        url: "/Admin/AdminProducts/EditAll",
                        type: "POST",
                        data: { ids: selectedProducts.join(','), discount: discount },
                        success: function (response) {
                            if (response.success) {
                                location.reload();
                            }
                        }
                    });
                }
            }
        });


    </script>

}

